server:
  port: 8081
app:
  kafka:
    admin:
      auto-create: true
    topics:
      user-events: user.events.v1
spring:
  application:
    name: user-service
  datasource:
    url: jdbc:postgresql://user-db:5432/user_service_db
    username: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: redis
      port: 6379
    cache:
      type: redis
      redis:
        time-to-live: 4m30s
        cache-names: keycloak-admin-token
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      acks: all
      retries: 100
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
  security:
    oauth2:
      client:
        registration:
          keycloak-client:
            provider: keycloak
            client-id: my-client
            client-secret: ${KEYCLOAK_CLIENT_SECRET:default-secret}
            authorization-grant-type: client_credentials
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/auth/realms/hybrid-service-realm
eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/
keycloak:
  admin:
    realm: hybrid-service-realm
  base-url: http://keycloak:8080/auth
